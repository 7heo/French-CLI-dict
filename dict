#!/bin/sh

usage () {
	echo "usage: $0 <word to define> or $0 -x <regex to search>" >&2
	exit
}

fatal () {
	echo "FATAL: $*. Aborting..."
	exit 1
}

html2text () {
	sed 's/<[^>]*class="[^"]*n-milestone[^"]*"[^>]*>/__/g' \
	| sed "s/<[^>]*class='[^']*n-milestone[^']*'[^>]*>/__/g" \
	| sed 's/<[^>]*>//g; s/^null$/Aucun rÃ©sultat./' | tr _ '\n' | tr -d '"'
}

checkdep () {
	command -v "$1" >/dev/null 2>&1 || fatal "Dependency $1 not found"
}

for dep in curl jq fold; do
	checkdep $dep || exit $?
done

[ $# -eq 0 ] && usage

query='{"range":{"begin":0,"end":10},"actions":[]'
query="$query"',"query":{"maxMatchSize":16000,'

if [ "x$1" != "x-x" ]
then
	query="$query"'"input":"match vedettesearch(//orth/hi, EXACT) = '
        query="$query"'&tokenize(\"'"$1"'\"%cdl) compound(//entryFree) = '
        query="$query"'vedettesearch"'
else
	query="$query"'"input":"match entreeVedetteRegexp(//form/orth) = '
        query="$query"'&tokenize(\"'"$2"'\" %dc) compound(//entryFree) = '
        query="$query"'entreeVedetteRegexp"'
fi
query="$query"',"modifiers":""},"format":"json+html"}'

echo "$query" | curl -SsL -d@- https://allegro.atilf.fr/repositories/academie9tei/queries/compound | jq '.results[].result' | html2text | fold -s
echo ""  # newline
